apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.1"

    defaultConfig {
        applicationId "com.fognl.herelink.launcher"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        stdRelease {
            storeFile getAppKeystoreFile()
            storePassword getAppKeystorePassword()
            keyAlias getAppKey()
            keyPassword getAppKeyPassword()
        }
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
        }

        stdRelease {
            minifyEnabled false
            signingConfig signingConfigs.stdRelease
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

def getAppKeystoreFile() {
    def filePath = hasProperty('HEX_SERVICES_KEYSTORE') ? HEX_SERVICES_KEYSTORE : null
    return filePath ? file(filePath) : null
}

def getAppKeystorePassword() {
    return hasProperty('HEX_SERVICES_KEYSTORE_PWD') ? HEX_SERVICES_KEYSTORE_PWD : ''
}

def getAppKeyPassword() {
    return hasProperty('HEX_SERVICES_KEY_PWD') ? HEX_SERVICES_KEY_PWD : ''
}

def getAppKey() {
    return hasProperty('HEX_SERVICES_KEY_ALIAS') ? HEX_SERVICES_KEY_ALIAS : ''
}
